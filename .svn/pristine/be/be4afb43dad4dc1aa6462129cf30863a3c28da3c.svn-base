/*
 * This file is part of Noise, licensed under the MIT License (MIT).
 *
 * Copyright (c) Flow Powered <https://github.com/flow>
 * Copyright (c) SpongePowered <https://github.com/SpongePowered>
 * Copyright (c) contributors
 *
 * Original libnoise C++ library by Jason Bevins <http://libnoise.sourceforge.net>
 * jlibnoise Java port by Garrett Fleenor <https://github.com/RoyAwesome/jlibnoise>
 * Noise is re-licensed with permission from jlibnoise author.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package spongepowered.test.java.org.spongepowered.noise;

import java.awt.image.BufferedImage;
import java.awt.image.DataBufferUShort;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.apache.commons.math3.util.Precision;

import spongepowered.noise.module.source.Billow;
import spongepowered.noise.module.source.Checkerboard;
import spongepowered.noise.module.source.Cylinders;
import spongepowered.noise.module.source.Perlin;
import spongepowered.noise.module.source.RidgedMulti;
import spongepowered.noise.module.source.Spheres;
import spongepowered.noise.module.source.Voronoi;
import spongepowered.noise.module.Module;

public class NoiseTest {
	
	  public static void main(String[] args) {
       
        final int width = 200, height = 200;
        
        final double xPeriod =10, yPeriod = 10;
        
        
      
        Module module = new Voronoi();
        
        {
        
        	((Voronoi) module).setEnableDistance(true); 
			((Voronoi) module).setDisplacement(.5);
			((Voronoi) module).setFrequency(.8);
			((Voronoi) module).setSeed(987946);
			
			
       // ((Perlin) module).setPersistence(0.714);
       // ((Perlin) module).setOctaveCount(5);
       //((Perlin) module).setPersistence(20);
        
        final BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_USHORT_GRAY);
      
        final short[] data = ((DataBufferUShort) image.getRaster().getDataBuffer()).getData();
        
        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
                final double noise = module.getValue(x / xPeriod, y / yPeriod, 0) / 2;
                double test = Precision.round(noise, 2);
                System.out.println("test = " + (test));
                data[y * width + x] = (short) (noise * 65_535);
            }
        }
        try {
			ImageIO.write(image, "PNG", new File("noise.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
    }
        }
}
